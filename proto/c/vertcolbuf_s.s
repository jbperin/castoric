
;; Autogenerated file. Do not modify by hand.
;; Use script clearVertColBuf.py
;; [ref config_viewport] 
#include "config.h"

.zero
colorLeft   .dsb 1
colorRight  .dsb 1

.text
#ifndef  USE_C_VERTCOLBUF
_initBufVertCol



patch_sky_color:lda #$03        ; Blue Sky
sta _bufVertColRight+0
sta _bufVertColLeft+0
sta _bufVertColRight+1
sta _bufVertColLeft+1
sta _bufVertColRight+2
sta _bufVertColLeft+2
sta _bufVertColRight+3
sta _bufVertColLeft+3
sta _bufVertColRight+4
sta _bufVertColLeft+4
sta _bufVertColRight+5
sta _bufVertColLeft+5
sta _bufVertColRight+6
sta _bufVertColLeft+6
sta _bufVertColRight+7
sta _bufVertColLeft+7
sta _bufVertColRight+8
sta _bufVertColLeft+8
sta _bufVertColRight+9
sta _bufVertColLeft+9
sta _bufVertColRight+10
sta _bufVertColLeft+10
sta _bufVertColRight+11
sta _bufVertColLeft+11
sta _bufVertColRight+12
sta _bufVertColLeft+12
sta _bufVertColRight+13
sta _bufVertColLeft+13
sta _bufVertColRight+14
sta _bufVertColLeft+14
sta _bufVertColRight+15
sta _bufVertColLeft+15
sta _bufVertColRight+16
sta _bufVertColLeft+16
sta _bufVertColRight+17
sta _bufVertColLeft+17
sta _bufVertColRight+18
sta _bufVertColLeft+18
sta _bufVertColRight+19
sta _bufVertColLeft+19
sta _bufVertColRight+20
sta _bufVertColLeft+20
sta _bufVertColRight+21
sta _bufVertColLeft+21
sta _bufVertColRight+22
sta _bufVertColLeft+22
sta _bufVertColRight+23
sta _bufVertColLeft+23
sta _bufVertColRight+24
sta _bufVertColLeft+24
sta _bufVertColRight+25
sta _bufVertColLeft+25
sta _bufVertColRight+26
sta _bufVertColLeft+26
sta _bufVertColRight+27
sta _bufVertColLeft+27
sta _bufVertColRight+28
sta _bufVertColLeft+28
sta _bufVertColRight+29
sta _bufVertColLeft+29
patch_ground_color:lda #$0C     ; Green Grass Ground
sta _bufVertColRight+30
sta _bufVertColLeft+30
sta _bufVertColRight+31
sta _bufVertColLeft+31
sta _bufVertColRight+32
sta _bufVertColLeft+32
sta _bufVertColRight+33
sta _bufVertColLeft+33
sta _bufVertColRight+34
sta _bufVertColLeft+34
sta _bufVertColRight+35
sta _bufVertColLeft+35
sta _bufVertColRight+36
sta _bufVertColLeft+36
sta _bufVertColRight+37
sta _bufVertColLeft+37
sta _bufVertColRight+38
sta _bufVertColLeft+38
sta _bufVertColRight+39
sta _bufVertColLeft+39
sta _bufVertColRight+40
sta _bufVertColLeft+40
sta _bufVertColRight+41
sta _bufVertColLeft+41
sta _bufVertColRight+42
sta _bufVertColLeft+42
sta _bufVertColRight+43
sta _bufVertColLeft+43
sta _bufVertColRight+44
sta _bufVertColLeft+44
sta _bufVertColRight+45
sta _bufVertColLeft+45
sta _bufVertColRight+46
sta _bufVertColLeft+46
sta _bufVertColRight+47
sta _bufVertColLeft+47
sta _bufVertColRight+48
sta _bufVertColLeft+48
sta _bufVertColRight+49
sta _bufVertColLeft+49
sta _bufVertColRight+50
sta _bufVertColLeft+50
sta _bufVertColRight+51
sta _bufVertColLeft+51
sta _bufVertColRight+52
sta _bufVertColLeft+52
sta _bufVertColRight+53
sta _bufVertColLeft+53
sta _bufVertColRight+54
sta _bufVertColLeft+54
sta _bufVertColRight+55
sta _bufVertColLeft+55
sta _bufVertColRight+56
sta _bufVertColLeft+56
sta _bufVertColRight+57
sta _bufVertColLeft+57
sta _bufVertColRight+58
sta _bufVertColLeft+58
sta _bufVertColRight+59
sta _bufVertColLeft+59

initBufVertColDone    
	rts

#endif // USE_C_VERTCOLBUF


;; Autogenerated file. Do not modify by hand.
;; Use script copyVertColBuf.py
;; [ref config_viewport] 
#include "config.h"
#ifndef  USE_C_VERTCOLBUF
_drawBufVertCol

;; TODO: 
;; <_Dbug_> Vu qu'on trace en vertical, une colonne a la fois, il suffit d'avoir du code déroulé avec 200 STA, et utiliser l'index pour choisir la colonne
;; <_Dbug_> donc STA $A000,x / STA $A000+40,x / STA $A000+40*2,x, etc...
;; <_Dbug_> A voir la place que ca prend
;; <_Dbug_> L'avantage c'est que si c'est déroulé, alors "bufVertColLeft[idxBufVertCol]" ca devient juste un simple LDA bufVertColLeft+0 /+1 / +2 /+3 absolu
;; <_Dbug_> J'ai pas testé si ca marche, mais en gros pour chaque scanline on peut avoir ca, j'avoue que c'est un peu gros:
;; <_Dbug_>         ldx bufVertColLeft+0*SCANLINE
;; <_Dbug_>         lda tabLeftRed,x
;; <_Dbug_>         ldx bufVertColRight+0*SCANLINE
;; <_Dbug_>         ora tabRightRed,x
;; <_Dbug_>         sta $A000+40*SCANLINE

;; theAdr  = (unsigned char *)(baseAdr + (int)((multi120_high[VIEWPORT_START_LINE]<<8) | multi120_low[VIEWPORT_START_LINE])); 
ldy #VIEWPORT_START_LINE
lda _multi120_low,Y
clc
adc _baseAdr
sta _theAdr
lda _multi120_high,Y
adc _baseAdr+1
sta _theAdr+1


;; for (idxBufVertCol = 0; idxBufVertCol < VIEWPORT_HEIGHT; ) {
lda #0
sta _idxBufVertCol
loop_over_line:

    ldy _idxBufVertCol
    lda _bufVertColLeft,y
    sta colorLeft
    lda _bufVertColRight,y
    sta colorRight
    
    ldy colorLeft 
    lda _tabLeftRed, y
    ldy colorRight
    ora _tabRightRed, y
    
    ldy #0
    sta (_theAdr),y 

    ldy colorLeft 
    lda _tabLeftGreen, y
    ldy colorRight
    ora _tabRightGreen, y

    ldy #40
    sta (_theAdr),y 

    ldy colorLeft 
    lda _tabLeftBlue, y
    ldy colorRight
    ora _tabRightBlue, y

    ldy #80
    sta (_theAdr),y 
    
    clc 
    lda _theAdr
    adc #120
    sta _theAdr
    .( : bcc skip: inc _theAdr+1: skip .)


;;     idxBufVertCol++;
inc _idxBufVertCol

lda _idxBufVertCol
cmp #VIEWPORT_HEIGHT
beq end_loop_over_line
jmp loop_over_line
end_loop_over_line:
;; }

drawBufVertColDone    

	rts
#endif // USE_C_VERTCOLBUF

